#IncludeRegexLine: ^[ 	]*[#%][ 	]*(include|import)[ 	]*[<"]([^">]+)([">])

#IncludeRegexScan: ^.*$

#IncludeRegexComplain: ^$

#IncludeRegexTransform: 

/Users/chen/code/LeetCode/001. Two Sum/solution.h
vector
-
unordered_map
-

/Users/chen/code/LeetCode/001. Two Sum/test.cpp
../Catch2/single_include/catch.hpp
/Users/chen/code/LeetCode/Catch2/single_include/catch.hpp
solution.h
/Users/chen/code/LeetCode/001. Two Sum/solution.h

/Users/chen/code/LeetCode/004. Median of Two Sorted Arrays/solution.h
vector
-

/Users/chen/code/LeetCode/004. Median of Two Sorted Arrays/test.cpp
../Catch2/single_include/catch.hpp
/Users/chen/code/LeetCode/Catch2/single_include/catch.hpp
solution.h
/Users/chen/code/LeetCode/004. Median of Two Sorted Arrays/solution.h

/Users/chen/code/LeetCode/026. Remove Duplicates from Sorted Array/solution.h
vector
-

/Users/chen/code/LeetCode/026. Remove Duplicates from Sorted Array/test.cpp
../Catch2/single_include/catch.hpp
/Users/chen/code/LeetCode/Catch2/single_include/catch.hpp
solution.h
/Users/chen/code/LeetCode/026. Remove Duplicates from Sorted Array/solution.h

/Users/chen/code/LeetCode/027. Remove Element/solution.h
vector
-

/Users/chen/code/LeetCode/027. Remove Element/test.cpp
../Catch2/single_include/catch.hpp
/Users/chen/code/LeetCode/Catch2/single_include/catch.hpp
solution.h
/Users/chen/code/LeetCode/027. Remove Element/solution.h

/Users/chen/code/LeetCode/031. Next Permutation/solution.h
vector
-
iostream
-

/Users/chen/code/LeetCode/031. Next Permutation/test.cpp
../Catch2/single_include/catch.hpp
/Users/chen/code/LeetCode/Catch2/single_include/catch.hpp
solution.h
/Users/chen/code/LeetCode/031. Next Permutation/solution.h

/Users/chen/code/LeetCode/094. Binary Tree Inorder Traversal/solution.h
vector
-
stack
-

/Users/chen/code/LeetCode/094. Binary Tree Inorder Traversal/test.cpp
../Catch2/single_include/catch.hpp
/Users/chen/code/LeetCode/Catch2/single_include/catch.hpp
solution.h
/Users/chen/code/LeetCode/094. Binary Tree Inorder Traversal/solution.h

/Users/chen/code/LeetCode/Catch2/single_include/catch.hpp
TargetConditionals.h
-
iosfwd
-
string
-
cstdint
-
vector
-
memory
-
cstddef
-
string
-
iosfwd
-
vector
-
cstddef
-
type_traits
-
string
-
iosfwd
-
cstddef
-
ostream
-
Foundation/Foundation.h
-
utility
-
tuple
-
ctime
-
ratio
-
chrono
-
iosfwd
-
string
-
string
-
cstddef
-
string
-
cstdint
-
string
-
cstdint
-
string
-
string
-
memory
-
exception
-
string
-
vector
-
type_traits
-
stdexcept
-
string
-
iosfwd
-
string
-
vector
-
type_traits
-
cmath
-
string
-
algorithm
-
string
-
vector
-
memory
-
objc/runtime.h
-
string
-
string
-
vector
-
memory
-
string
-
iosfwd
-
string
-
vector
-
memory
-
memory
-
vector
-
string
-
string
-
string
-
iosfwd
-
map
-
set
-
memory
-
algorithm
-
cstring
-
cfloat
-
cstdio
-
assert.h
-
memory
-
ostream
-
vector
-
string
-
vector
-
memory
-
cmath
-
limits
-
memory
-
signal.h
-
string
-
AfxWin.h
-
windows.h
-
signal.h
-
string
-
cassert
-
ostream
-
sstream
-
vector
-
memory
-
set
-
algorithm
-
fstream
-
ctime
-
cstring
-
ostream
-
stdexcept
-
iosfwd
-
sstream
-
unistd.h
-
string
-
assert.h
-
stdbool.h
-
sys/types.h
-
unistd.h
-
sys/sysctl.h
-
cstddef
-
ostream
-
fstream
-
string
-
cerrno
-
vector
-
string
-
memory
-
Foundation/Foundation.h
/Users/chen/code/LeetCode/Catch2/single_include/Foundation/Foundation.h
signal.h
-
crtdbg.h
-
set
-
limits
-
algorithm
-
iomanip
-
cstdlib
-
cstdint
-
cstring
-
stdexcept
-
regex
-
algorithm
-
cstdlib
-
vector
-
set
-
algorithm
-
ios
-
map
-
string
-
map
-
vector
-
exception
-
cassert
-
algorithm
-
sstream
-
memory
-
iosfwd
-
cstdlib
-
iomanip
-
cstdio
-
iostream
-
fstream
-
sstream
-
vector
-
memory
-
algorithm
-
ostream
-
cstring
-
cctype
-
ostream
-
cstring
-
sstream
-
cctype
-
exception
-
algorithm
-
sstream
-
sstream
-
algorithm
-
assert.h
-
stdexcept
-
memory
-
sstream
-
algorithm
-
string
-
vector
-
memory
-
chrono
-
cmath
-
iomanip
-
ostream
-
sstream
-
iomanip
-
cstring
-
cfloat
-
cstdio
-
assert.h
-
memory
-
cfloat
-
cstdio
-
assert.h
-
sstream
-
ctime
-
algorithm
-

